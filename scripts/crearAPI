import boto3

apigateway_client = boto3.client("apigateway", region_name="us-east-2")

# Crear API Gateway
api_response = apigateway_client.create_rest_api(
    name="APIClientes",
    description="API de clientes",
    endpointConfiguration={"types": ["REGIONAL"]}
)
api_id = api_response["id"]
print("API creada con ID:", api_id)

# Obtener el recurso raíz
resources = apigateway_client.get_resources(restApiId=api_id)
root_id = resources["items"][0]["id"]

# Crear un nuevo recurso en API Gateway (Ejemplo: "/saludo")
resource_response = apigateway_client.create_resource(
    restApiId=api_id,
    parentId=root_id,
    pathPart="clientes"
)
resource_id = resource_response["id"]
print("Recurso '/clientes' creado con ID:", resource_id)

# Crear método HTTP GET 
apigateway_client.put_method(
    restApiId=api_id,
    resourceId=resource_id,
    httpMethod="GET",
    authorizationType="NONE"
)

# Vincular Lambda a API Gateway
lambda_arn = f"arn:aws:lambda:us-east-2:640168420977:function:ObtenerClientes"
apigateway_client.put_integration(
    restApiId=api_id,
    resourceId=resource_id,
    httpMethod="GET",
    type="AWS_PROXY",
    integrationHttpMethod="POST",
    uri=f"arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/{lambda_arn}/invocations"
)

print("Integración API Gateway ↔ Lambda creada.")

lambda_client = boto3.client("lambda", region_name="us-east-2")

lambda_client.add_permission(
    FunctionName="ObtenerClientes",
    StatementId="APIInvoke",
    Action="lambda:InvokeFunction",
    Principal="apigateway.amazonaws.com",
    SourceArn=f"arn:aws:execute-api:us-east-2:640168420977:{api_id}/*/GET/clientes"
)

print("Permisos de API Gateway agregados a Lambda.")

apigateway_client.create_deployment(
    restApiId=api_id,
    stageName="prod"
)

print("API desplegada en el stage 'prod'.")